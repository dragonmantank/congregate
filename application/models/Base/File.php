<?php

/**
 * Model_Base_File
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $directory
 * @property integer $author_id
 * @property integer $revision
 * @property string $title
 * @property integer $fileDetail_id
 * @property Model_User $Author
 * @property Model_FileDetail $FileDetail
 * @property Doctrine_Collection $Revisions
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Model_Base_File extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('file');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('directory', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('author_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('revision', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('fileDetail_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Model_User as Author', array(
             'local' => 'author_id',
             'foreign' => 'id'));

        $this->hasOne('Model_FileDetail as FileDetail', array(
             'local' => 'fileDetail_id',
             'foreign' => 'id',
             'cascade' => array(
             0 => 'delete',
             )));

        $this->hasMany('Model_FileDetail as Revisions', array(
             'local' => 'id',
             'foreign' => 'file_id',
             'cascade' => array(
             0 => 'delete',
             )));
    }
}