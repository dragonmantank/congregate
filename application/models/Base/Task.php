<?php

/**
 * Model_Base_Task
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $project_id
 * @property integer $parent_id
 * @property string $title
 * @property string $description
 * @property date $dateAdded
 * @property date $deadline
 * @property integer $author_id
 * @property integer $assignedTo
 * @property tinyint $status
 * @property Model_Project $Project
 * @property Model_User $Author
 * @property Doctrine_Collection $Notes
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Model_Base_Task extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('task');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('project_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('parent_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('dateAdded', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('deadline', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('author_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('assignedTo', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status', 'tinyint', null, array(
             'type' => 'tinyint',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Model_Project as Project', array(
             'local' => 'project_id',
             'foreign' => 'id'));

        $this->hasOne('Model_User as Author', array(
             'local' => 'author_id',
             'foreign' => 'id'));

        $this->hasMany('Model_TaskNote as Notes', array(
             'local' => 'id',
             'foreign' => 'task_id'));
    }
}