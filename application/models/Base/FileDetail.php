<?php

/**
 * Model_Base_FileDetail
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $file_id
 * @property string $filename
 * @property string $fsFilename
 * @property string $mimetype
 * @property integer $size
 * @property timestamp $dateAdded
 * @property integer $author_id
 * @property Model_User $Author
 * @property Doctrine_Collection $File
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Model_Base_FileDetail extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('file_detail');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('file_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('filename', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('fsFilename', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('mimetype', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('size', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('dateAdded', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('author_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Model_User as Author', array(
             'local' => 'author_id',
             'foreign' => 'id'));

        $this->hasMany('Model_File as File', array(
             'local' => 'id',
             'foreign' => 'fileDetail_id'));
    }
}